{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Money Regrets \ud83d\udcb8","text":"<p>Welcome to Money Regrets \u2013 the personal finance app that doesn\u2019t sugarcoat your spending habits. It\u2019s not here to help you feel better. It\u2019s here to hold up a mirror\u2026 and maybe laugh a little.</p>"},{"location":"#taglines","title":"\ud83e\uddfe Taglines","text":"<ul> <li>Financial literacy through emotional damage.</li> <li>All your worst purchases. In one place.</li> <li>Where your money goes to haunt you.</li> <li>Budgeting, but with consequences.</li> </ul>"},{"location":"#what-is-this","title":"\ud83c\udfaf What Is This?","text":"<p>MoneyRegrets is a brutally honest, slightly sarcastic finance tracker designed to highlight your spending sins. Think of it as a budgeting app with a passive-aggressive therapist baked in.</p>"},{"location":"#core-features","title":"\ud83d\udcc9 Core Features","text":"<ul> <li> <p>Impulse Meter\u2122   Ranks your purchases by \u201cWas this dumb?\u201d</p> </li> <li> <p>That Cost What? Popups   Auto-roasts any high-dollar transactions in real-time.</p> </li> <li> <p>Guilt Points   Earn points for not spending money. Redeem for absolutely nothing.</p> </li> <li> <p>Regret Timeline   A visual journey of your financial decisions and the pain they caused.</p> </li> <li> <p>Bank Integration   Seamlessly connect your accounts using Plaid, Finicity, and MX to automatically track and categorize your spending.</p> </li> <li> <p>Real-Time Syncing   Stay up-to-date with your financial data across all connected accounts.</p> </li> </ul>"},{"location":"#installation","title":"\ud83d\udce6 Installation","text":"<p>Coming soon...</p> <p>python3 -m venv .venv</p> <p>source .venv/bin/activate</p> <p>pip install -r requirements.txt</p>"},{"location":"#roadmap","title":"\ud83d\udea7 Roadmap","text":"<ul> <li>Notifications that yell at you.</li> <li>Weekly \u201cShame Reports.\u201d</li> <li>Integration with therapy booking apps (kinda joking, kinda not).</li> <li>Support for Plaid, Finicity, and MX to enhance account connectivity and transaction insights.</li> <li>Advanced analytics for spending trends and regret patterns.</li> </ul>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>Pull requests welcome! If you\u2019ve got ideas that can make this even more painfully helpful, open an issue.</p>"},{"location":"#license","title":"\ud83d\udcdc License","text":"<p>MIT. Because regret should be free and open source.</p>"},{"location":"alembic/","title":"Managing Alembic","text":"<p>Alembic is a lightweight database migration tool for usage with SQLAlchemy. This document provides guidance on how to manage Alembic in this project.</p>"},{"location":"alembic/#configuration","title":"Configuration","text":"<p>The Alembic configuration file is located at the root of the project:</p> <pre><code>alembic.ini\n</code></pre> <p>This file contains the main configuration settings for Alembic, such as the database connection URL and the location of migration scripts.</p>"},{"location":"alembic/#directory-structure","title":"Directory Structure","text":"<p>The Alembic directory structure is as follows:</p> <pre><code>alembic/\n    env.py          # Environment configuration for Alembic\n    README          # Documentation for Alembic usage\n    script.py.mako  # Template for generating migration scripts\n    versions/       # Directory containing migration scripts\n</code></pre>"},{"location":"alembic/#migration-scripts","title":"Migration Scripts","text":"<p>Migration scripts are stored in the <code>alembic/versions/</code> directory. Each script is named with a unique identifier and a descriptive name, e.g., <code>5c626978d652_create_user.py</code>.</p>"},{"location":"alembic/#common-commands","title":"Common Commands","text":"<p>Below are some common Alembic commands for managing database migrations:</p>"},{"location":"alembic/#1-initialize-alembic","title":"1. Initialize Alembic","text":"<p>If Alembic is not already initialized, you can initialize it using the following command:</p> <pre><code>alembic init alembic\n</code></pre> <p>This creates the <code>alembic/</code> directory and the <code>alembic.ini</code> configuration file.</p>"},{"location":"alembic/#2-create-a-new-migration","title":"2. Create a New Migration","text":"<p>To create a new migration script, run:</p> <pre><code>alembic revision -m \"&lt;description&gt;\"\n</code></pre> <p>Replace <code>&lt;description&gt;</code> with a brief description of the migration, e.g., <code>add_users_table</code>.</p> <p>If you want Alembic to automatically generate the migration script based on changes to your models, use:</p> <pre><code>alembic revision --autogenerate -m \"&lt;description&gt;\"\n</code></pre>"},{"location":"alembic/#3-apply-migrations","title":"3. Apply Migrations","text":"<p>To apply all pending migrations to the database, run:</p> <pre><code>alembic upgrade head\n</code></pre> <p>You can also apply a specific migration by specifying its identifier:</p> <pre><code>alembic upgrade &lt;revision_id&gt;\n</code></pre>"},{"location":"alembic/#4-downgrade-migrations","title":"4. Downgrade Migrations","text":"<p>To revert the last migration, run:</p> <pre><code>alembic downgrade -1\n</code></pre> <p>To revert to a specific migration, use:</p> <pre><code>alembic downgrade &lt;revision_id&gt;\n</code></pre>"},{"location":"alembic/#5-check-current-revision","title":"5. Check Current Revision","text":"<p>To check the current migration version applied to the database, run:</p> <pre><code>alembic current\n</code></pre>"},{"location":"alembic/#6-show-migration-history","title":"6. Show Migration History","text":"<p>To view the history of all migrations, run:</p> <pre><code>alembic history\n</code></pre>"},{"location":"alembic/#best-practices","title":"Best Practices","text":"<ol> <li>Use Autogenerate: When possible, use the <code>--autogenerate</code> flag to let Alembic detect changes in your models and generate migration scripts automatically.</li> <li>Review Scripts: Always review the generated migration scripts to ensure they accurately reflect the intended changes.</li> <li>Test Migrations: Test your migrations in a development or staging environment before applying them to production.</li> <li>Keep Migrations Organized: Use descriptive names for migration scripts to make it easier to understand their purpose.</li> </ol>"},{"location":"alembic/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Database Connection Issues: Ensure the database connection URL in <code>alembic.ini</code> is correct.</li> <li>Conflicting Migrations: If multiple developers are working on migrations, coordinate to avoid conflicts and merge changes carefully.</li> </ul> <p>For more information, refer to the Alembic documentation.</p>"},{"location":"api/","title":"API","text":"<p>API V1</p>"},{"location":"git-repository-management/","title":"Git Repository Management","text":""},{"location":"modules/users/","title":"Users","text":""},{"location":"modules/users/#api","title":"API","text":""},{"location":"modules/users/#read-users","title":"Read Users","text":""},{"location":"modules/users/#create-user","title":"Create User","text":""},{"location":"modules/users/#read-user","title":"Read User","text":""},{"location":"modules/users/#replace-user","title":"Replace User","text":""},{"location":"modules/users/#update-user","title":"Update User","text":""},{"location":"modules/users/#delete-user","title":"Delete User","text":""}]}